# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Go specific
*.exe
*.exe~
*.dll
*.so
*.dylib
*.test
*.out
go.work

# Environment variables
.env
.env.*
!.env.example

# Build artifacts
vault-plugin-f5
vault-plugin-f5-linux
vault/plugins/

# IDE files
.idea/
.vscode/

# OS specific files
.DS_Store
Thumbs.db

# Binaries
vault-plugin-f5-token
vault-plugin-f5-token-linux

# Build artifacts
*.o
*.a
*.dll
*.log

# Go specific
/vendor/
.glide/
.idea/
.vscode/
*.iml
*.out

# Docker artifacts
docker-compose.override.yml

# Test files
connection.json
policy.hcl

# Temporary files
*.swp
*~
.DS_Store
